<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace에는 구현할 인터페이스의 풀패키지명을 포함한 명칭이 들어간다 -->
<mapper namespace="com.myweb.board.model.NoticeMapper">
	
	<!-- id는 인터페이스의 함수명 (지금은 NoticeBoard 인터페이스의 메서드 이름 초록색) -->
	<!-- SQL구문에서 세미콜론은 생략한다 -->
	<!-- select는 resultType에 반환받을 타입을 반드시!!!!! 적어야한다 -->
	<!-- 타입의 종류로는 string, int, double, array, dto 등이 있다 -->
	<select id="getTime" resultType="string">
		SELECT SYSDATE FROM DUAL
	</select>
	
	<!-- 파라미터 값이 있으면 이 파라미터에 대한 타입을 지정해야 한다. 반드시 필수는 아님 -->
	<!-- ?는 #{}로 바뀐다. 파라미터의 이름은 getter명을 따라간다. -->
	
	<insert id="regist" parameterType="com.PET.board.model.BoardDTO">
    INSERT INTO BOARD (MEM, BUM , MEM_DMAIL, title_M, content) 
    VALUES (board_seq.nextval, #{email}, #{title} )
</insert>

<select id="getList" LIST.BoardDTO">
    SELECT * FROM BOARD ORDER BY BNO DESC
</select>

<select id="getContent" resultType="com.myweb.board.model.BoardDTO">
    SELECT *
FROM (
    SELECT B.*,
       LAG(BNO, 1, 0) OVER(ORDER BY BNO) AS PREV_NO,
       LAG(TITLE, 1, '이전 글이 없습니다') OVER(ORDER BY BNO) AS PREV_TITLE,
       LEAD(BNO, 1, 0) OVER(ORDER BY BNO) AS NEXT_NO,
       LEAD(TITLE, 1, '다음 글이 없습니다') OVER(ORDER BY BNO) AS NEXT_TITLE
FROM BOARD B
)
WHERE BNO = #{BNO}
</select>

<select id="update" parameterType="map">
	UPDATE BOARD SET TITLE = #{title}, CONTENT = #{content} WHERE BNO = #{bno}
</select>

<select id="delete" parameterType="string">
	DELETE FROM BOARD WHERE BNO = #{bno}
</select>

</mapper>